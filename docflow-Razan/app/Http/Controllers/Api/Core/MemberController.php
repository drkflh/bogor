<?php
namespace App\Http\Controllers\Api\Core;

use App\Helpers\APIUtil;
use App\Helpers\AuthUtil;
use App\Http\Controllers\Api\Core\ApiAdminController;
use App\Models\Core\Mongo\Member;
use Illuminate\Support\Facades\Hash;

class MemberController extends ApiAdminController
{

    public function __construct()
    {
        $this->controller_name = strtolower( str_replace('Controller', '', get_class()) );
        $this->model = new Member();

        $this->res_path = 'models'; // under resources ,ie: resources/models
        $this->yml_file = 'member'; // name of yml ,ie: member.yml
        $this->entity = 'member';

    }

    public function beforeOutput($data)
    {
        unset($data['password']);
        $data['roleId'] = AuthUtil::getRoleId(env('DEFAULT_MEMBER_ROLE', 'Member' ));
        $data['roleSlug'] = AuthUtil::getRoleSlug( $data['roleId'] );
        return parent::beforeOutput($data); // TODO: Change the autogenerated stub
    }


    public function beforeSave($data)
    {

        $roleName = $data['roleName'] ?? env('DEFAULT_MEMBER_ROLE', 'Member' );
        $data['roleName'] = $roleName;
        $data['roleId'] = AuthUtil::getRoleId($roleName);
        $data['roleSlug'] = AuthUtil::getRoleSlug( $data['roleId'] );
        $data['roleName'] = AuthUtil::getRoleName($data['roleId']);
        if(isset($data['password'])){
            $data['password'] = Hash::make($data['password']);
        }
        $data['regStatus'] = env('DEFAULT_REG_STATUS', 'UNASSIGNED');
        $data = APIUtil::addGeoLocation($data);
        return parent::beforeSave($data); // TODO: Change the autogenerated stub
    }

    public function afterSave($data)
    {
        //$data->afterSave = 'AFTER';
        return parent::afterSave($data); // TODO: Change the autogenerated stub
    }

    public function beforeUpdate($data)
    {
        $roleName = $data['roleName'] ?? env('DEFAULT_MEMBER_ROLE', 'Member' );
        $data['roleName'] = $roleName;
        $data['roleId'] = AuthUtil::getRoleId($roleName);
        $data['roleSlug'] = AuthUtil::getRoleSlug( $data['roleId'] );
        $data['roleName'] = AuthUtil::getRoleName($data['roleId']);
        if(isset($data['password']) && $data['password'] != ''){
            $data['password'] = Hash::make($data['password']);
        }
        $data = APIUtil::addGeoLocation($data);
        return parent::beforeUpdate($data); // TODO: Change the autogenerated stub
    }

}
