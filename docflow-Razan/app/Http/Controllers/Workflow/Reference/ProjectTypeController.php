<?php
/**
 * Created by PhpStorm.
 * User: awidarto
 * Date: 13/12/19
 * Time: 23.33
 */
namespace App\Http\Controllers\Workflow\Reference;

use App\Helpers\AuthUtil;
use App\Helpers\ImportUtil;
use App\Helpers\Util;
use App\Http\Controllers\Core\AdminController;
use App\Models\Workflow\Reference\ProjectType;
use App\Models\Core\Mongo\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Storage;

class ProjectTypeController extends AdminController

{
    public function __construct()
    {
        parent::__construct();

        $this->res_path = 'models/controllers/workflow/reference';

        $this->yml_file = 'projecttype_controller';

        $this->entity = 'Project Type';

        $this->auth_entity = 'project-type';

        $this->controller_base = 'workflow/reference/project-type';

        $this->view_base = 'workflow.reference.projecttype';

        $this->model = new ProjectType();
    }

    public function getIndex()
    {
        $this->title = 'Project Type';

        $cname = substr(strrchr(get_class($this), '\\'), 1);
        $this->controller_name = str_replace('Controller', '', $cname);
        $this->show_title = true;
        /**
        * Set form layout
        */
        $this->form_view = 'form.html'; // use plain html
        $this->form_layout = 'workflow.reference.projecttype.form_layout';
        $this->form_dialog_size = 'md';
        $this->viewer_dialog_size = 'md';

        /**
        * Set Viewer layout
        */
        $this->viewer_layout = 'workflow.reference.projecttype.view_layout';

        $this->runAcl();
        $this->runUrlSet();
        $this->runViewSet();
        $this->runMoreMenu();


        $formOptions = Util::loadResYaml($this->yml_file,$this->res_path)->toFormOption();

        $this->aux_data = $formOptions;

        $this->add_title_fields = '"<h4> Add Project Type</h4>"';
        $this->view_title_fields = '"Lihat"  + " " + this.name';
        $this->update_title_fields = '"Update" +  " " + this.name';

        return parent::getIndex();
    }

    public function beforeUpdateForm($population)
    {
        return parent::beforeUpdateForm($population); // TODO: Change the autogenerated stub
    }

    public function beforeUpdate($id, $data)
    {

        return parent::beforeUpdate($id, $data); // TODO: Change the autogenerated stub
    }

    public function beforeSave($data)
    {

        return parent::beforeSave($data); // TODO: Change the autogenerated stub
    }


    public function getParam()
    {

        return parent::getParam(); // TODO: Change the autogenerated stub
    }

    public function postIndex(Request $request)
    {

        return parent::postIndex($request); // TODO: Change the autogenerated stub
    }

    protected function rowPostProcess($row)
    {

        return parent::rowPostProcess($row);
    }

}
