<?php
/**
 * Created by PhpStorm.
 * User: awidarto
 * Date: 13/12/19
 * Time: 23.33
 */
namespace App\Http\Controllers\Reference;

use App\Helpers\Util;
use App\Http\Controllers\Core\AdminController;
use App\Models\Reference\BizUnit;
use App\Models\Reference\Company;
use Illuminate\Http\Request;

class BizUnitController extends AdminController

{
    public function __construct()
    {
        parent::__construct();

//        $this->res_path = 'models/controllers/reference/bizunit';
//        $this->yml_file = 'fields';

        $this->res_path = 'models/controllers/reference';
        $this->yml_file = 'bizunit_controller';

        $this->entity = 'Business Unit';

        $this->auth_entity = 'biz-unit';

        $this->controller_base = 'reference/biz-unit';

        $this->view_base = 'reference.bizunit';

        $this->model = new BizUnit();
    }

    public function getIndex()
    {
        $this->title = 'Business Unit';

        $cname = substr(strrchr(get_class($this), '\\'), 1);
        $this->controller_name = str_replace('Controller', '', $cname);

        $this->logo = env('APP_LOGO');

        $this->show_title = true;

        $this->viewer_layout = 'reference.bizunit.formlayout';
        $this->viewer_dialog_size = 'lg';

        $this->form_view = 'form.html'; // use plain html
        $this->form_layout = 'reference.bizunit.formlayout';
        $this->form_dialog_size = 'lg';

        $this->runAcl();
        $this->runUrlSet();
        $this->runViewSet();
        $this->runMoreMenu();


        $this->add_title_fields = '"<h4> Add '.$this->entity.'</h4>"';
        $this->view_title_fields = '"View" + " " +this.bizunitName' ;
        $this->update_title_fields = '"Update" + " " +this.bizunitName' ;

        $this->can_request_approval = false;
        $this->can_approve = false;
        $this->can_revise = false;
        $this->can_clone = false;
        $this->can_multi_clone = false;
        $this->can_print = false;


        return parent::getIndex();
    }

    public function postIndex(Request $request)
    {
        $this->defOrderField = 'code';
        $this->defOrderDir = 'asc';
        return parent::postIndex($request); // TODO: Change the autogenerated stub
    }

    public function getParam()
    {
        return parent::getParam(); // TODO: Change the autogenerated stub
    }


    public function additionalQuery($model, Request $request)
    {
        /* sample query modifier */
        $model = $model->orderBy('updated_at', 'desc');
        $model = $model->orderBy('created_at', 'desc');
        return $model;
    }

    public function beforeSave($data)
    {
        /* sample callback / hook */
        //$data['roleId'] = AuthUtil::getRoleId('Employee');
        $data['version'] = config('dbversions.companies');
        return parent::beforeSave($data);
    }

    protected function rowPostProcess($row)
    {


        return parent::rowPostProcess($row);
    }

    public function beforeUpdate($id, $data)
    {
        $data['version'] = config('dbversions.companies');
        return parent::beforeUpdate($id, $data); // TODO: Change the autogenerated stub
    }// Transform fields before commited into the database collection ( xls import )

    public function beforeImportCommit($data)
    {
        //example : transform imported data to datetime field
        // $data['IODate'] = ImportUtil::excelDateToNormal($data['IODate']);
        // $data['DocDate'] = ImportUtil::excelDateToNormal($data['DocDate']);
        // $data['RetDate'] = ImportUtil::excelDateToNormal($data['RetDate']);
        // $data['DispDate'] = ImportUtil::excelDateToNormal($data['DispDate']);
        $data['version'] = config('dbversions.companies');
        return parent::beforeImportCommit($data); // TODO: Change the autogenerated stub
    }
}
