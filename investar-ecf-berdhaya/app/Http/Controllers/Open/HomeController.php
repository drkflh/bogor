<?php
/**
 * Created by PhpStorm.
 * User: awidarto
 * Date: 13/12/19
 * Time: 23.33
 */
namespace App\Http\Controllers\Open;

use App\Helpers\AuthUtil;
use App\Helpers\Util;
use App\Http\Controllers\Core\AdminController;
use App\Http\Controllers\Core\PublicController;
use App\Models\Assets\Vehicle;
use App\Models\Tour\Baggage;
use App\Models\Cms\Article;
use App\Models\Core\Mongo\User;
use Carbon\Carbon;
use http\Env\Response;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Str;

class HomeController extends PublicController
{
    public function __construct()
    {
        parent::__construct();

        $this->model = new Article();
    }

    public function getPage($slug = null)
    {

        $article = Article::where('slug', '=', $slug)->first();

        $this->res_path = 'models/controllers/cms';
        $this->yml_file = 'page_controller';

        $this->nav_file = 'user_nav';

        $this->title = $article->title;

        $this->show_title = true;

//        $this->controller_base = 'cms/article';

        $this->item_data_url = 'cms/article/data';

        $this->item_id = $article->_id;

        $this->has_tab = false;

        $this->form_mode = 'view';

        $this->form_view = 'form.htmlviewpage';

        $this->form_type = 'html';

        $this->form_layout = 'cms.theme.default.page';
        $this->viewer_layout = 'cms.theme.default.page';

//        $this->layout = 'layouts.nobleui_h';
        $this->layout = 'layouts.dojek1_page';

//        if( AuthUtil::is('owner')){
//            $this->form_layout = 'cms.theme.owner';
//        }
//
//        if( AuthUtil::is('validator') || AuthUtil::is('pendamping')){
//            $this->form_layout = 'halal.admin.dashboard.validator';
//        }
//
//        if( AuthUtil::is('sponsor')){
//            $this->form_layout = 'halal.admin.dashboard.sponsor';
//        }

        $this->can_autosave = false;

        $this->can_lock = false;

        $this->can_add = false;

        $this->page_refresh_button = false;

        $this->page_class = 'col-lg-12 col-md-12 col-xs-12';

        return parent::formGenerator();
    }

    public function getIndex()
    {
        $this->title = 'Dashboard';

        $cname = substr(strrchr(get_class($this), '\\'), 1);
        $this->controller_name = str_replace('Controller', '', $cname);

        $this->nav_section = 'users';
        $this->yml_file = 'fields';

        $this->template_var = [ 'hasSideNav'=>false ];

        $this->can_add = true;

        $this->data_url = 'admin/fieldreport';

        $this->table_view = env('ADMIN_DASHBOARD_VIEW', 'trips.dashboard');

        return parent::getIndex();
    }

    public function getView(Request $request, $id = null, $keyword0 = null, $keyword1 = null, $keyword2 = null)
    {
        if(is_null($id)){
            $this->layout = env('DEFAULT_OPEN_LAYOUT');
        }else{
            $this->layout = 'layouts.dojek'.$id;
        }
        $this->title = env('SITE_TITLE');

        return parent::getView($request, $id, $keyword0, $keyword1, $keyword2); // TODO: Change the autogenerated stub
    }


    public function additionalQuery($model, Request $request)
    {
        /* sample query modifier */
        //$model = $model->where('roleId','=', AuthUtil::getRoleId('Employee') );
        return $model;
    }

    public function beforeSave($data)
    {
        /* sample callback / hook */
        //$data['roleId'] = AuthUtil::getRoleId('Employee');
        return parent::beforeSave($data);
    }

    protected function rowPostProcess($row)
    {
        /* modify or add new fields */
        //$row['linkConsult'] = url('clinic/patient/km/'.$row['_id']);
        //$row['linkOp'] = url('clinic/patient/op/'.$row['_id']);

        return parent::rowPostProcess($row);
    }

    /*  Example External data interceptopr
     *
     *
     * */

    /*  Example API Proxy
     *
     *
     * */
    public function getBaggageData($id)
    {
//        $client = new Client();
//        $result = $client->get(env('KMN_DATA_URL').'/'.$id, [
//            'form_params' => [
//                'sample-form-data' => 'value'
//            ]
//        ]);
//
//        return response($result->getBody())
//            ->withHeaders([
//                'Content-Type' => 'application/json'
//            ]);
//

        $handle = Str::random(12);
        $result = ['result'=>'OK', 'data'=>['handle'=>$handle]];
        return response()->json($result);

    }

    public function getData($id, $additional_data = null)
    {
        $handle = Str::random(12);
        $result = ['result'=>'OK', 'data'=>['handle'=>$handle]];
        return response()->json($result);
        //return parent::getData($id, $additional_data); // TODO: Change the autogenerated stub
    }

    public function getParam()
    {
        $handle = Str::random(12);
        $code = Str::random(12);
        $result = ['result'=>'OK', 'data'=>['handle'=>$handle,'code'=>$code]];
        return response()->json($result);
        return parent::getParam(); // TODO: Change the autogenerated stub
    }


    /* Custom form sample route method
     * requires manual route setting
     * */
    public function getReg(){

//        $this->nav_section = 'users';
        $this->yml_file = 'reg';
        $this->res_path = 'views/home';
        $this->nav_file = 'nav';
        $this->nav_path = env('APP_NAV_PATH');
        $this->yml_layout_file = 'op_layout';
        $this->logo = env('APP_LOGO');

        /* Injected model data, merged with vue data model as well
         * */

        $this->title = 'Baggage Registration';

        $this->show_title = false;

        $this->item_data_url = 'tour/baggage/param';

        $this->add_url = 'clinic/konsul/add';

        $this->update_url = 'clinic/konsul/relay';

        $this->autosave_url = 'clinic/konsul/autosave';

        $this->item_id = '';

        $this->has_tab = false;

        $this->form_view = 'form.flatgridpage';

        $this->form_mode = 'edit';

        $this->can_autosave = false;

        $this->can_add = true;

        $this->can_lock = true;

        $this->grid = [
            ['col'=>[5,7]],
        ];

        $uiOptions = [

        ];

        $formOptions = Util::loadResYaml($this->yml_file,$this->res_path)->toFormOption();

        $this->aux_data = array_merge( $uiOptions ,$formOptions);

//        $this->js_load_transform = 'clinic.patient.konsul_js_load_transform';
//
//        $this->js_post_transform = 'clinic.patient.konsul_js_post_transform';
//
//        $this->js_tab_change = 'clinic.patient.konsul_js_tab_change';
//
//        $this->js_pop_open = 'clinic.patient.konsul_js_pop_open';

//        $this->aux_data['patientData'] = '{}';

        return parent::formGenerator();
    }

    public function getCheck(){

//        $this->nav_section = 'users';
        $this->yml_file = 'check';
        $this->res_path = 'views/tour/baggage';
        $this->nav_file = 'nav';
        $this->nav_path = env('APP_NAV_PATH');
        $this->yml_layout_file = 'op_layout';
        $this->logo = env('APP_LOGO');

        /* Injected model data, merged with vue data model as well
         * */

        $this->title = 'Baggage Check';

        $this->show_title = false;

        $this->item_data_url = 'tour/baggage/param';

        $this->add_url = 'clinic/konsul/add';

        $this->update_url = 'clinic/konsul/relay';

        $this->autosave_url = 'clinic/konsul/autosave';

        $this->item_id = '';

        $this->has_tab = false;

        $this->form_view = 'form.flatgridpage';

        $this->form_mode = 'edit';

        $this->can_autosave = false;

        $this->can_add = true;

        $this->can_lock = true;

        $this->grid = [
            ['col'=>[5,7]],
        ];

        $baggageDataDefaultObject = [
            'name'=>'',
            'idNumber'=>'',
            'nationality'=>'',
            'picture'=>url('images/default_photo.jpg')
        ];

        $baggageDataTemplate = '`'. file_get_contents( resource_path('views/tour/baggage/baggage_info.html')) .'`';
        $uiOptions = [
            'baggageDataTemplate'=>$baggageDataTemplate,
            'baggageDataDefaultObject'=>$baggageDataDefaultObject
        ];

        $formOptions = Util::loadResYaml($this->yml_file,$this->res_path)->toFormOption();

        $this->aux_data = array_merge( $uiOptions ,$formOptions);

//        $this->js_load_transform = 'clinic.patient.konsul_js_load_transform';
//
//        $this->js_post_transform = 'clinic.patient.konsul_js_post_transform';
//
//        $this->js_tab_change = 'clinic.patient.konsul_js_tab_change';
//
//        $this->js_pop_open = 'clinic.patient.konsul_js_pop_open';

//        $this->aux_data['patientData'] = '{}';

        return parent::formGenerator();
    }

    public function getQuery(Request $request){
        $q = $request->get('q');

        $res = Vehicle::where('code','=', trim($q))->first();

        if($res){
            $data = $res->toArray();
        }else{
            $data = [
                'name'=>'Johhny Ive',
                'idNumber'=>'X5653353',
                'nationality'=>'British',
                'picture'=>url('images/default_photo.jpg')
            ];
        }


        return response()->json(['result'=>'OK', 'data'=>$data] );
    }

    public function getPrivacyPolicy()
    {
        $default_layout =  env('DEFAULT_LAYOUT', 'layouts.dojek3');

                return view( 'halal.company.privacy-policy' )
                    ->with('title', __('Privacy Policy'))
                    ->with('layout', $default_layout);
    }


}
