<?php

namespace App\Http\Controllers\Api\Reference;

use App\Http\Controllers\Api\Core\ApiAdminController;
use App\Models\Reference\Area;
use Illuminate\Http\Request;


class AreaController extends ApiAdminController
{

    public function __construct()
    {
        $this->controller_name = strtolower( str_replace('Controller', '', get_class()) );
        $this->model = new Area();

        $this->res_path = 'models/db/reference'; // under resources ,ie: resources/models
        $this->yml_file = 'area'; // name of yml ,ie: member.yml
        $this->entity = 'area';

    }

    public function additionalQuery($model, Request $request)
    {

        $searchField = ( $request->has('sf') )?$request->input('sf'): null;
        $searchField1 = ( $request->has('sf1') )?$request->input('sf1'): null;
        $searchValue1 = ( $request->has('sv1') )?$request->input('sv1'): null;
        $searchOp1 = ( $request->has('so1') )?$request->input('so1'): 'eq';

        if(!is_null($searchField1)){
            if($searchOp1 == 'like' || $searchOp1 == 'likeb' ){ // % sign on left and right
                $model = $model->where($searchField1, 'like', '%'.$searchValue1.'%');
            }
            if($searchOp1 == 'likel' ){ // % sign on the left
                $model = $model->where($searchField1, 'like', '%'.$searchValue1);
            }
            if($searchOp1 == 'liker' ){ // % sign on the right
                $model = $model->where($searchField1, 'like', $searchValue1.'%');
            }

            if($searchOp1 == 'eq'){
                $model = $model->where($searchField1, '=', $searchValue1);
            }
        }

        if( $searchField == 'cityName'){
            $model = $model->groupBy('cityName')->select(['cityName', 'provinceName']);
        }

        if( $searchField == 'kecamatanName'){
            $model = $model->groupBy('kecamatanName')->select(['kecamatanName', 'provinceName']);
        }


        return parent::additionalQuery($model, $request); // TODO: Change the autogenerated stub
    }


    public function beforeOutput($data)
    {
        //$data['addOut'] = "ADD BEFORE OUTPUT";
        return parent::beforeOutput($data); // TODO: Change the autogenerated stub
    }


    public function beforeSave($data)
    {
        //$data['beforeSave'] = 'BEFORE';
        return parent::beforeSave($data); // TODO: Change the autogenerated stub
    }

    public function afterSave($data)
    {
        //$data['afterSave'] = 'AFTER';
        return parent::afterSave($data); // TODO: Change the autogenerated stub
    }


}
